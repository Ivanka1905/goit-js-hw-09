{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFI,EAAAZ,GAASa,OAAOC,QAAQ,qBAAqBX,QAAeC,OAE5DQ,EAAAZ,GAASa,OAAOE,QAAQ,oBAAoBZ,QAAeC,SAE5DA,MAXQY,SAASC,cAAc,SAe/BC,iBAAiB,UACxB,SAAkBC,GAChBA,EAAMC,iBACN,MAAMC,OAAEA,EAAMC,KAAEA,EAAIlB,MAAEA,GAAUe,EAAMI,OAAOC,SAC7C,IAAIC,EAAcC,OAAOL,EAAOM,OAC5BC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAaH,OAAOtB,EAAMuB,OAE9B,IAAK,IAAIG,EAAQ,EAAGA,EAAQL,EAAaK,GAAO,EAC9C5B,EAAc4B,EAAO,EAAGD,GAAYE,OAAOC,QAC3CH,GAAcD","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form')\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n};\n\nformEl.addEventListener('submit', onSubmit);\nfunction onSubmit(event) {\n  event.preventDefault();\n  const { amount, step, delay } = event.target.elements;\n  let amountValue = Number(amount.value);\n  let stepValue = Number(step.value);\n  let delayValue = Number(delay.value);\n  \n  for (let index = 0; index < amountValue; index+=1) {\n    createPromise(index +1, delayValue).then().catch();\n    delayValue += stepValue; }\n}\n\n// done\n    "],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","success","failure","document","querySelector","addEventListener","event","preventDefault","amount","step","target","elements","amountValue","Number","value","stepValue","delayValue","index","then","catch"],"version":3,"file":"03-promises.9729b62e.js.map"}